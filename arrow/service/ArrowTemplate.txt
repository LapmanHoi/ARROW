package <PACKAGE_NAME/>;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import arrow.data.DBConn;
import arrow.manager.ArrowManager;
import arrow.model.ArrowBean;
import arrow.utility.ArrowTool;
import jakarta.ws.rs.Consumes;
import jakarta.ws.rs.DELETE;
import jakarta.ws.rs.GET;
import jakarta.ws.rs.POST;
import jakarta.ws.rs.PUT;
import jakarta.ws.rs.Path;
import jakarta.ws.rs.Produces;
import jakarta.ws.rs.core.Context;
import jakarta.ws.rs.core.MediaType;
import jakarta.ws.rs.core.Response;

@Path("/")
public class <CLASS_NAME/> {
  private static final String PATH = "/<PATH_NAME/>";
  private static final String MESG = "Request from: %s (%s)";

  @POST
  @Path(PATH)
  @Consumes(MediaType.APPLICATION_JSON)
  @Produces(MediaType.APPLICATION_JSON)
  public Response createInfo(ArrowBean bean, @Context HttpServletRequest request, @Context HttpServletResponse response) throws Exception {
    ArrowTool.writeLog(this.getClass()).info(String.format(MESG, request.getRemoteAddr().toString(), PATH));
    DBConn dbObject = new DBConn();
    ArrowManager manager = (ArrowManager) Class.forName("<MANAGER_NAME/>").getDeclaredConstructor().newInstance();
    int rc = manager.create(dbObject, bean);
    dbObject.closeConn();
    return Response.ok(rc).build();
  }

  @GET
  @Path(PATH)
  @Consumes(MediaType.APPLICATION_JSON)
  @Produces(MediaType.APPLICATION_JSON)
  public ArrowBean readInfo(ArrowBean bean, @Context HttpServletRequest request, @Context HttpServletResponse response) throws Exception {
    ArrowTool.writeLog(this.getClass()).info(String.format(MESG, request.getRemoteAddr().toString(), PATH));
    DBConn dbObject = new DBConn();
    ArrowManager manager = (ArrowManager) Class.forName("<MANAGER_NAME/>").getDeclaredConstructor().newInstance();
    bean = manager.read(dbObject, bean);
    dbObject.closeConn();
    return bean;
  }

  @PUT
  @Path(PATH)
  @Consumes(MediaType.APPLICATION_JSON)
  @Produces(MediaType.APPLICATION_JSON)
  public Response updateInfo(ArrowBean bean, @Context HttpServletRequest request, @Context HttpServletResponse response) throws Exception {
    ArrowTool.writeLog(this.getClass()).info(String.format(MESG, request.getRemoteAddr().toString(), PATH));
    DBConn dbObject = new DBConn();
    ArrowManager manager = (ArrowManager) Class.forName("<MANAGER_NAME/>").getDeclaredConstructor().newInstance();
    int rc = manager.update(dbObject, bean);
    dbObject.closeConn();
    return Response.ok(rc).build();
  }

  @DELETE
  @Path(PATH)
  @Consumes(MediaType.APPLICATION_JSON)
  @Produces(MediaType.APPLICATION_JSON)
  public Response deleteInfo(ArrowBean bean, @Context HttpServletRequest request, @Context HttpServletResponse response) throws Exception {
    ArrowTool.writeLog(this.getClass()).info(String.format(MESG, request.getRemoteAddr().toString(), PATH));
    DBConn dbObject = new DBConn();
    ArrowManager manager = (ArrowManager) Class.forName("<MANAGER_NAME/>").getDeclaredConstructor().newInstance();
    int rc = manager.delete(dbObject, bean);
    dbObject.closeConn();
    return Response.ok(rc).build();
  }
}